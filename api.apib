FORMAT: 1A
HOST: https://api.hubcash.com/v1

# API v1.0 - Documentation
First of all, thanks for using our API. This documentation will guide you how to implement
 your application to take advantage of our payment, delivery and fraud control solutions.

<br/>

## Authorization
To do so, we need use keys in *http headers* for all requests as specified below:

```http
X-Hubcash-Code: string
X-Hubcash-Token: string
```

::: note
## Keys
If you don't have these keys yet, you can can gain access following the links:

* [Production](https://www.hubcash.com/panel/register) keys to your production environment;
* [Development](https://www.hubcash.com/panel/register-development) keys to your development environment and testing;
:::

> "For both environments you can use the default endpoint."

<br/>

## Support
[Contact support team](https://www.hubcash.com/support), you can always contact us to get more information.

<br/>


# Data Structures

## PostCardData (object)
+ Brand: Visa (required) - Card brand name
+ HolderName: Maria da Silva (required) - Holder name
+ Document: 223.112.333.112-22 (required) - Document of the holder
+ Phone: 93 912323322 (optional) - Optional phone of the holder
+ ExpMonth: 03 (required) - Card expiration month (mm)
+ ExpYear: 2022 (required) - Card expiration year (yyyy)
+ Number: 5162321366555222331234 (required) - (Requests) Card number
+ SecurityCode: 233 (required) - Card security code

## PutCardData (object)
+ Brand: Visa (required) - Card brand name
+ HolderName: Maria da Silva (required) - Holder name
+ Document: 223.112.333.112-22 (required) - Document of the holder
+ Phone: 93 912323322 (optional) - Optional phone of the holder
+ ExpMonth: 03 (required) - Card expiration month (mm)
+ ExpYear: 2022 (required) - Card expiration year (yyyy)

## ViewCardData (object)
+ CardId: 58c040b32d8baf18526217f5 (optional) - Unique identifier
+ Brand: Visa (required) - Card brand name
+ HolderName: Maria da Silva (required) - Holder name
+ Document: 223.112.333.112-22 (required) - Document of the holder
+ Phone: 93 912323322 (optional) - Optional phone of the holder
+ ExpMonth: 03 (required) - Card expiration month (mm)
+ ExpYear: 2022 (required) - Card expiration year (yyyy)
+ LastDigits: 1234 (optional) - Last digits of the cards
+ DateUpdated: `Y-m-d H:i:s` (optional) -  Date updated
+ DateAdded: `Y-m-d- H:i:s` (optional) -  Date added

## CardList (array)
+ (ViewCardData) - Cards

## CurrencyData (object)
+ CurrencyId: 58c040b32d8baf18526217f5 (optional) - Unique identifier
+ Name: BRL (required) - Currency name
+ SymbolLeft: R$ (optional) - Symbol left
+ SymbolRight: US$  (optional) - Symbol right
+ DecimalPlace: 2  (number, required) - Decimal place

## CurrencyList (array)
+ (CurrencyData) - Currencies

## BrandData (object)
+ Name: Mastercard (required) - Unique identifier, brand name
+ Image: https://api.hubcash.com/images/brand/mastercard.png (optional) - Brand image
+ NumberDigits: 22  (number, required) - Total number of digits for card number
+ NumberSecurity: 3  (number, required) - Total number of digits for security number

## BrandList (array)
+ (BrandData) - Brands


## NotificationData (object)
+ NotificationId: 58c040b32d8baf18526217f5 (required) - Unique identifier
+ DateUpdated: `Y-m-d H:i:s` (optional) -  Date updated
+ DateAdded: `Y-m-d- H:i:s` (required) -  Date added
+ LastResponseCode: 200 (number, required) -  The last http response code obtained
+ Sale (NotificationSaleData, required)

## NotificationSaleData (object)
+ Tid: 58c040b32d8baf18526217f5 (required) - Sale unique identifier
+ Status: 1 (number, required) - Sale status

## NotificationList (array)
+ (NotificationData) - Notifications

# Group Sales

## Status

The table below describes the list of possible status for Sales:

ID | Description
--:| :-----------
 1 | Processed
 2 | Analyzing
 3 | Capturing
 4 | WaitingPayment (For billets)
 5 | Fail
 6 | Canceled
 7 | Done

## Methods

The table below describes the list of possible methods for Sales:

ID        | Description
:---------| :-----------
 `Credit` | Using credit card, accept installments
 `Debit`  | Using debit card, does not accept installments
 `Billet` | Using billet, does not accept installments, has optional configuration in the [panel](https://www.hubcash.com/panel)

# Group Cards
Credit and debit cards can be saved to be used by the consumer recurrently transactions.

## Cards [/cards/{CardId}]

+ Parameters
    + CardId - Identifier

### Details [GET]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Card (ViewCardData)

### Edit [PUT]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

    + Attributes (object)
        + Card (PutCardData)

+ Response 200 (application/json)

    + Attributes (object)
        + Card (ViewCardData)

### Delete [DELETE]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Success (string)


## List of cards by document [/cards/document/{document}{?pg}]
Get a list of cards by consumer document.

+ Parameters
    + document - Document of the consumer
    + pg: `1` (number, optional) - Page number

### List [GET]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Cards (CardList)
        + Pages (number)


## Create New Card [/cards]

### Create [POST]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

    + Attributes (object)
        + Card (PostCardData)

+ Response 200 (application/json)

    + Attributes (object)
        + Card (ViewCardData)

# Group Helpers
Requests to return additional data used in others requests using his identifiers.

## Currencies [/currencies]

### Currencies [GET]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Currencies (CurrencyList)

## Brands [/brands]

### Brands [GET]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Brands (BrandList)

## Brand by number [/brands/{number}]
Use this request to return the brand data from first digits of the card number.

+ Parameters
    + number - First digits of the card number


### Brand by number [GET]

::: warning
#### <i class="fa fa-warning"></i> Caution
Do not send full `number`, with the all digits of the card, just the first four ones.
:::

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Brand (BrandData)

# Group Notifications
Notifications are used to send data back to your application, when a Sale status changes.

::: note
#### <i class="fa fa-info"></i> URL
The notification will be sent if you configure a URL, previously in this [panel](https://www.hubcash.com/panel).
But in all the cases, the notification will be created and you can resend later.
:::


## Notifications [/notifications/{NotificationId}]

+ Parameters
    + NotificationId - Identifier

### Details [GET]

::: note
The response below is the exactly the data that we send to you after notification creation.
:::

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Notification (NotificationData)

### Resend [PUT]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Notification (NotificationData)


## List of notifications [/notifications{?pg}]

+ Parameters
    + pg: `1` (number, optional) - Page number

### List [GET]

+ Request example (application/json)

    + Headers

            X-Hubcash-Code: <code>
            X-Hubcash-Token: <token>

+ Response 200 (application/json)

    + Attributes (object)
        + Notifications (NotificationList)
        + Pages (number)